version: '3.7'
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
services:
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    restart: on-failure

  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    restart: on-failure

  kong:
    image: kong:latest
    user: kong
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8010, 0.0.0.0:8443 http2 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
      KONG_PREFIX: /var/run/kong
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: system
    secrets:
      - kong_postgres_password
    ports:
      - "0.0.0.0:80:8010/tcp"
      - "0.0.0.0:443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
    security_opt:
      - no-new-privileges
  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - kong_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  konga-prepare:
    image: pantsel/konga
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga"
    restart: on-failure
    links:
      - db:db
    depends_on:
      - db
  konga:
    image: pantsel/konga
    container_name: konga
    restart: on-failure
    links:
      - db:db
    depends_on:
      - db
      - konga-prepare
    environment:
      DB_ADAPTER: postgres
      PORT: 9000
      NODE_ENV: development
      KONGA_HOOK_TIMEOUT: 120000
      DB_URI: postgresql://kong:kong@db:5432/konga
      KONGA_LOG_LEVEL: warn
      TOKEN_SECRET: some_secret_token
    ports:
      - "9000:9000"
secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD